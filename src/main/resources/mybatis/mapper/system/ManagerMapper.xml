<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zwh.carsystem.mapper.ManagerMapper">
  <resultMap id="BaseResultMap" type="com.zwh.carsystem.entity.Manager">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="last_visit_time" jdbcType="TIMESTAMP" property="lastVisitTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="role_type" jdbcType="INTEGER" property="roleType" />
    <result column="salary" jdbcType="DECIMAL" property="salary" />
    <result column="entry_time" jdbcType="TIMESTAMP" property="entryTime" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="data_flag" jdbcType="INTEGER" property="dataFlag" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    id, account, password, name, last_visit_time, create_time, role_type, salary, entry_time,token, 
    data_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from manager
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from manager
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zwh.carsystem.entity.Manager" useGeneratedKeys="true" keyProperty="id">
    insert into manager (account, password, 
      name, last_visit_time, create_time, 
      role_type, salary, entry_time,token, 
      data_flag)
    values ( #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, now(), now(), 
      #{roleType,jdbcType=INTEGER}, #{salary,jdbcType=DECIMAL}, #{entryTime,jdbcType=TIMESTAMP}, #{token,jdbcType=VARCHAR}, 
      #{dataFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zwh.carsystem.entity.Manager">
    insert into manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="lastVisitTime != null">
        last_visit_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="entryTime != null">
        entry_time,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="dataFlag != null">
        data_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="lastVisitTime != null">
        #{lastVisitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="entryTime != null">
        #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="dataFlag != null">
        #{dataFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zwh.carsystem.entity.Manager">
    update manager
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="lastVisitTime != null">
        last_visit_time = now(),
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="entryTime != null">
        entry_time = #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="dataFlag != null">
        data_flag = #{dataFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zwh.carsystem.entity.Manager">
    update manager
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      last_visit_time = now(),
      role_type = #{roleType,jdbcType=INTEGER},
      salary = #{salary,jdbcType=DECIMAL},
      entry_time = #{entryTime,jdbcType=TIMESTAMP},
      token = #{token,jdbcType=VARCHAR},
      data_flag = #{dataFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
	<select id="getManagerByAccountAndPassword" resultMap="BaseResultMap">
		SELECT
		m.id,
		m.account,
		m.`name`,
		m.`password`,
		m.last_visit_time,
		m.create_time,
		m.role_type,
		COALESCE(m.salary,0) AS salary,
		m.entry_time,
		m.data_flag,
		r.role_name as role
		FROM
		manager m
		INNER JOIN role r ON r.id = m.role_type
		WHERE
		m.account = #{account}
		AND
		m.password = #{password}
	</select>
	
	<select id="getManagerByToken" resultType="com.zwh.carsystem.entity.Manager">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		manager
		WHERE
		token = #{token}
	</select>
	
	<select id="getManagerByAccount" resultType="com.zwh.carsystem.entity.Manager">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		manager
		WHERE
		account = #{account}
	</select>

	<update id="resetPassword">
		UPDATE manager m
		SET m.`password`= #{password}
		WHERE
		m.id = #{managerId}
	</update>
	
	<select id="getManagerListByType" resultMap="BaseResultMap">
		SELECT
		m.id,
		m.account,
		m.`name`,
		m.`password`,
		m.last_visit_time,
		m.create_time,
		m.role_type,
		COALESCE(m.salary,0) AS salary,
		m.entry_time,
		m.data_flag,
		r.role_name as role
		FROM
		manager m
		INNER JOIN role r ON r.id = m.role_type
		WHERE m.data_flag > #{type}
		LIMIT
		#{pageVO.startIndex}, #{pageVO.endIndex}
	</select>
	
	<select id="getManagerListByTypeCount" resultType="int">
		select
		count(1)
		from
		manager m
		WHERE m.data_flag > #{type}
	</select>

</mapper>